#!/usr/bin/env bash

set -eux

TMP_DIR="$(mktemp -d)"
ROOT_DIR="${1:-./clusters}"  # Default to ./clusters if no argument is provided
DEBUG="${DEBUG:-true}"

function debug_log() {
  if [ "$DEBUG" = "true" ]; then
    printf "[DEBUG] %s" "$1"
  fi
}

function get_targets {
  find "$ROOT_DIR" -maxdepth 4 -name kustomization.yaml -exec dirname {} \;
}

function safe_dirname() {
  echo "$1" | sed 's/[^a-zA-Z0-9.]/_/g'
}

function build {
  local ref="$1"
  local safe_ref=$(safe_dirname "$ref")
  echo "Checking out ref: $ref"
  git checkout "$ref" --quiet
  for envpath in $(get_targets); do

    local relative_path="${envpath#$ROOT_DIR/}"
    local build_dir="$TMP_DIR/$safe_ref/$relative_path"
    printf "Creating build directory: %s\n" "$build_dir"
    mkdir -p "$build_dir"
    local output_file="$build_dir/manifests.yaml"
    printf "Running kustomize for %s\n" "$envpath"
    kustomize build "$envpath" -o "$output_file"

    debug_log "Contents of $output_file:"
    debug_log "$(cat "$output_file")"
    debug_log "End of $output_file"
    debug_log "------------------------------------"
  done
}

function main {
  git config --global --add safe.directory "$GITHUB_WORKSPACE"
  local diff escaped_output output
  build "$INPUT_HEAD_REF"
  build "$INPUT_BASE_REF"

  local safe_head_ref=$(safe_dirname "$INPUT_HEAD_REF")
  local safe_base_ref=$(safe_dirname "$INPUT_BASE_REF")


  set +e
  diff=$(git diff --no-index "$TMP_DIR/$safe_base_ref" "$TMP_DIR/$safe_head_ref")
  set -e
  output=$(printf "\`\`\` diff\n%s\n\`\`\`\n" "$diff")
  escaped_output=${output//$'\n'/'%0A'}

  # If escaped output is longer than 65000 characters return "output to large to print as a github comment"
  if [ ${#escaped_output} -gt 65000 ]; then
    escaped_output="Output is greater than 65000 characters, and therefore too large to print as a github comment."
  fi

  echo "::set-output name=diff::$escaped_output"
  printf "\n\nOutput: %s\n" "$escaped_output"
}

# Check if a directory is provided as an argument
if [ $# -ge 1 ]; then
  ROOT_DIR="$1"
fi

echo "Using root directory: $ROOT_DIR"
debug_log "Debug mode is enabled"
main
